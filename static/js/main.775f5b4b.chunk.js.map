{"version":3,"sources":["services/userServices.js","components/CreateUser.js","assets/watermelon-icon.png","services/authServices.js","components/Login.js","components/Logout.js","components/Nave.js","routes/PrivateRoute.js","assets/undraw_breakfast_psiw.svg","assets/undraw_Hamburger_8ge6.svg","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["userServices","getUsers","axios","get","createUser","newUser","post","getUserById","id","deleteUser","delete","updateUser","userData","put","CreateUser","useState","name","email","password","setUserData","Card","style","width","Form","onSubmit","e","console","log","preventDefault","then","response","err","Group","className","controlId","Label","Control","type","placeholder","value","onChange","target","Text","Button","variant","getCurrentUser","JSON","parse","localStorage","getItem","authServices","login","userEntry","logout","headers","authHeader","user","token","authorization","hasPermission","permission","data","permissions","Login","handleLogin","setUserEntry","error","setError","isPending","setPending","hist","useHistory","bsPrefix","height","Spinner","animation","role","setItem","stringify","push","message","Alert","Logout","handleLogout","NavDropdown","Item","onClick","res","removeItem","Nave","authStatus","popLogin","Popover","Navbar","bg","expand","sticky","collapseOnSelect","Container","Brand","href","src","logo","Toggle","aria-controls","Collapse","Nav","Link","title","Divider","OverlayTrigger","trigger","placement","overlay","requiredPermission","arrayPermissions","split","filter","p","length","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","Home","Jumbotron","Row","Col","breakfastRose","hamburguer","App","isLogged","setIsLogged","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.775f5b4b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst getUsers = () => {\n  return axios.get(\n    \"https://deliveryapp-api.herokuapp.com/api/users?page=0&limit=30&name=\"\n  );\n};\n\nconst createUser = (newUser) => {\n  return axios.post(\"https://deliveryapp-api.herokuapp.com/api/users\", newUser);\n};\n\nconst getUserById = (id) => {\n  return axios.get(\"https://deliveryapp-api.herokuapp.com/api/users/\" + id);\n};\n\nconst deleteUser = (id) => {\n  return axios.delete(\"https://deliveryapp-api.herokuapp.com/api/users/\" + id);\n};\n\nconst updateUser = (id, userData) => {\n  return axios.put(\n    \"https://deliveryapp-api.herokuapp.com/api/users/\" + id,\n    userData\n  );\n};\nconst userServices = {\n  getUsers,\n  createUser,\n  getUserById,\n  deleteUser,\n  updateUser,\n};\n\nexport default userServices;\n","import { useState } from \"react\";\nimport userServices from \"../services/userServices\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function CreateUser() {\n  const [userData, setUserData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  function handleSubmit(e) {\n    console.log(userData);\n    e.preventDefault();\n\n    userServices.createUser(userData).then(\n      (response) => {\n        console.log(response);\n      },\n      (err) => console.log(\"deu erro!!!\", err)\n    );\n  }\n  return (\n    <Card style={{ width: \"18rem\" }}>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={userData.name}\n            onChange={(e) => {\n              setUserData({ ...userData, name: e.target.value });\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={userData.email}\n            onChange={(e) => {\n              setUserData({ ...userData, email: e.target.value });\n            }}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={userData.password}\n            onChange={(e) => {\n              setUserData({ ...userData, password: e.target.value });\n            }}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Card>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/watermelon-icon.14c6f06f.png\";","import axios from \"axios\";\n\nconst login = (userEntry) => {\n  return axios.post(\n    \"https://deliveryapp-api.herokuapp.com/api/users/login\",\n    userEntry\n  );\n};\n\nconst logout = (headers) => {\n  return axios.post(\n    \"https://deliveryapp-api.herokuapp.com/api/users/logout\",\n    {},\n    headers\n  );\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst hasPermission = (permission) => {\n  let currentPermission = getCurrentUser().data.permissions;\n  return currentPermission == permission;\n};\n\nconst authHeader = () => {\n  const user = getCurrentUser();\n\n  if (user && user.token) {\n    return { headers: { authorization: user.token } };\n  } else {\n    return {};\n  }\n};\n\nconst authServices = {\n  login,\n  logout,\n  getCurrentUser,\n  authHeader,\n  hasPermission,\n};\n\nexport default authServices;\n","import { useState } from \"react\";\nimport authServices from \"../services/authServices\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function Login({ handleLogin }) {\n  const [userEntry, setUserEntry] = useState({ email: \"\", password: \"\" });\n  const [error, setError] = useState(false);\n  const [isPending, setPending] = useState(false);\n  let hist = useHistory();\n\n  const checkCredentials = (e) => {\n    setPending(true);\n    e.preventDefault();\n    authServices.login(userEntry).then(\n      (response) => {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        handleLogin();\n        hist.push(\"/\");\n      },\n      (error) => {\n        console.log(error.message);\n        setError(error.message);\n        setPending(false);\n      }\n    );\n  };\n  return (\n    <Card\n      bsPrefix=\"card center melonborder\"\n      style={{ width: \"255px\", height: \"286px\" }}\n    >\n      {isPending ? (\n        <Spinner animation=\"border\" role=\"status\" variant=\"success\"></Spinner>\n      ) : (\n        <Form className=\"center\" onSubmit={checkCredentials}>\n          <Form.Group className=\"mb-3 center\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={userEntry.email}\n              onChange={(e) => {\n                setUserEntry({ ...userEntry, email: e.target.value });\n              }}\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3 center\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={userEntry.password}\n              onChange={(e) => {\n                setUserEntry({ ...userEntry, password: e.target.value });\n              }}\n            />\n          </Form.Group>\n          {error && <Alert variant=\"danger\"> Invalid Credentials!</Alert>}\n\n          <Button variant=\"success\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Card>\n  );\n}\n","import authServices from \"../services/authServices\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router\";\nimport Card from \"react-bootstrap/Card\";\nimport { NavDropdown } from \"react-bootstrap\";\n\nexport default function Logout({ handleLogout }) {\n  let hist = useHistory();\n\n  function handleLogoutclick() {\n    let headers = authServices.authHeader();\n    authServices.logout(headers).then(\n      (res) => {\n        localStorage.removeItem(\"user\");\n        handleLogout();\n        hist.push(\"/\");\n      },\n      (err) => {\n        return <label>{err}</label>;\n      }\n    );\n  }\n\n  return (\n    <NavDropdown.Item onClick={handleLogoutclick}>Logout</NavDropdown.Item>\n  );\n}\n","import Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport logo from \"../assets/watermelon-icon.png\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\n\nconst Nave = ({ authStatus, handleLogout, handleLogin }) => {\n  const popLogin = (\n    <Popover id=\"popover-basic\">\n      <Login handleLogin={handleLogin} />\n    </Popover>\n  );\n\n  return authStatus ? (\n    <Navbar bg=\"green\" expand=\"lg\" variant=\"dark\" sticky=\"top\" collapseOnSelect>\n      <Container>\n        <Navbar.Brand href=\"#\">\n          <img src={logo} width=\"30px\" height=\"30px\" />\n          Melon\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"#\">Home</Nav.Link>\n            <Nav.Link href=\"#restaurants\">Restaurants</Nav.Link>\n            <NavDropdown title=\"My Account\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">\n                Change my Data\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">My Orders</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Help</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <Logout handleLogout={handleLogout} />\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  ) : (\n    <Navbar bg=\"green\" expand=\"lg\" variant=\"dark\" sticky=\"top\" collapseOnSelect>\n      <Container>\n        <Navbar.Brand bsPrefix=\"navbar-brand brandFont\" href=\"#\">\n          <img src={logo} width=\"30px\" height=\"30px\" />\n          Melon\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"#\">Home</Nav.Link>\n            <Nav.Link href=\"#createuser\">Create an Account</Nav.Link>\n            <OverlayTrigger\n              trigger=\"click\"\n              placement=\"bottom\"\n              overlay={popLogin}\n            >\n              <Nav.Link>Login</Nav.Link>\n            </OverlayTrigger>\n            <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.2\">Help</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Contact Us!\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Nave;\n","import { Route, Redirect } from \"react-router\";\nimport authServices from \"../services/authServices\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        let curUsr = authServices.getCurrentUser();\n        if (curUsr && hasPermission(rest.permissions)) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nconst hasPermission = (requiredPermission) => {\n  let arrayPermissions = requiredPermission.split(\", \");\n  let allowed = false;\n  arrayPermissions = arrayPermissions.filter((p) =>\n    authServices.hasPermission(p)\n  );\n\n  arrayPermissions.length > 0 ? (allowed = true) : (allowed = false);\n\n  return allowed;\n};\n\nexport default PrivateRoute;\n","export default __webpack_public_path__ + \"static/media/undraw_breakfast_psiw.fdfbdb40.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Hamburger_8ge6.f04a3704.svg\";","import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport breakfastRose from \"../assets/undraw_breakfast_psiw.svg\";\nimport hamburguer from \"../assets/undraw_Hamburger_8ge6.svg\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nconst Home = () => {\n  return (\n    <>\n      <Jumbotron\n        className=\"center\"\n        bsPrefix=\"jumbotron bg-neongreen homecontent\"\n      >\n        <Row>\n          <Col className=\"center\">\n            <h1>Uma frase de efeito!</h1>\n            <p>\n              Alguma frase legal para atrair leads\n              <strong> através de uma informação relevante </strong>e um botão\n              para criar conta.\n            </p>\n            <p>\n              <Button bsPrefix=\"btn\" variant=\"success\">\n                <strong>Sign up!</strong>\n              </Button>\n            </p>\n          </Col>\n          <Col>\n            <img className=\"img-fluid\" src={breakfastRose} />\n          </Col>\n        </Row>\n      </Jumbotron>\n\n      <Jumbotron bsPrefix=\"jumbotron bg-rosequartz homecontent\">\n        <h1>Hello, world!</h1>\n        <p>\n          This is a simple hero unit, a simple jumbotron-style component for\n          calling extra attention to featured content or information.\n        </p>\n        <img className=\"img-fluid\" src={hamburguer} />\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default Home;\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport CreateUser from \"./components/CreateUser\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Nave from \"./components/Nave\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport authServices from \"./services/authServices\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(!!authServices.getCurrentUser());\n\n  return (\n    <Router>\n      <Nave\n        authStatus={isLogged}\n        handleLogout={() => {\n          setIsLogged(false);\n        }}\n        handleLogin={() => {\n          setIsLogged(true);\n        }}\n      />\n      <div className=\"App\">\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n\n            <Route path=\"/createuser\">\n              <CreateUser />\n            </Route>\n            <PrivateRoute\n              path=\"/mydata\"\n              component={<h1>My data private!!!</h1>}\n              permissions={\"CLIENT, ADMIN\"}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}